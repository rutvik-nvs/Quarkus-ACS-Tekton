apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: s2i-build-scan-deploy
  namespace: sandbox
spec:
  finally:
    - name: delete-roxsecrets
      params:
        - name: SCRIPT
          value: oc delete secret roxsecrets -n sandbox
        - name: VERSION
          value: latest
      taskRef:
        kind: ClusterTask
        name: openshift-client
  params:
    - default: 'https://github.com/rutvik-nvs/Quarkus-ACS-Tekton.git'
      description: git repository url to checkout the source code from
      name: git_url
      type: string
    - default: master
      description: repository revision to checkout
      name: revision
      type: string
    - default: 'true'
      description: set to true to skip image-check stage
      name: skip_image_check
      type: string
  tasks:
    - name: generate-build-id
      taskRef:
        kind: Task
        name: generate-build-id
      params:
        - name: base-version
          value: '1.0'
    - name: git-clone
      params:
        - name: url
          value: $(params.git_url)
        - name: revision
          value: $(params.revision)
        - name: refspec
          value: ''
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: ''
        - name: sparseCheckoutDirectories
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: httpProxy
          value: ''
        - name: httpsProxy
          value: ''
        - name: noProxy
          value: ''
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:fb10f18e6b984584c114a30a5201a0426820d292e9efc982b2cdfed71a2a6930
        - name: userHome
          value: /home/git
      runAfter:
        - generate-build-id
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
    - name: maven
      params:
        - name: MAVEN_IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/openshift/java:openjdk-11-ubi8
        - name: GOALS
          value:
            - package
        - name: SERVER_USER
          value: ''
        - name: SERVER_PASSWORD
          value: ''
        - name: PROXY_USER
          value: ''
        - name: PROXY_PASSWORD
          value: ''
        - name: PROXY_PORT
          value: ''
        - name: PROXY_HOST
          value: ''
        - name: PROXY_NON_PROXY_HOSTS
          value: ''
        - name: PROXY_PROTOCOL
          value: ''
        - name: CONTEXT_DIR
          value: .
        - name: MAVEN_MIRROR_URL
          value: >-
            http://nexus-sandbox.apps.nvs.ocp.nvsconsulting.io/repository/maven-public
      runAfter:
        - git-clone
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: workspace
        - name: maven-settings
          workspace: workspace
    - name: update-build-manifest
      runAfter:
        - maven
      taskRef:
        kind: Task
        name: yq
      params:
        - name: SCRIPT
          value: yq e -i '.build_version = "$(tasks.generate-build-id.results.build-id)"' ./openshift-helm/values.yaml
        - name: image
          value: >-
            docker.io/mikefarah/yq:4.27.5@sha256:2be3626ed633fbe1fc33ee9343a1256a6be53334412b2251b9a859f8c145bb53
        - name: files
          value: []
        - name: expression
          value: ''
      workspaces:
        - name: source
          workspace: workspace
    - name: git-commit-build
      params:
        - name: BASE_IMAGE
          value: >-
            cgr.dev/chainguard/git:root-2.39@sha256:7759f87050dd8bacabe61354d75ccd7f864d6b6f8ec42697db7159eccd491139
        - name: GIT_USER_NAME
          value: Tekton
        - name: GIT_USER_EMAIL
          value: tekton.demo@nvsconsulting.io
        - name: GIT_SCRIPT
          value: |-
            git config --global --add safe.directory /workspace/source && \
            git pull origin master && \
            git checkout master && \
            git add --all && \
            git commit -m "Bump build version to $(tasks.generate-build-id.results.build-id)" && \
            git push -u origin master
        - name: USER_HOME
          value: /root
        - name: VERBOSE
          value: 'true'
      runAfter:
        - update-build-manifest
      taskRef:
        kind: ClusterTask
        name: git-cli
      workspaces:
        - name: source
          workspace: workspace
    - name: argocd-sync-build
      params:
        - name: application-name
          value: java-sample
        - name: revision
          value: HEAD
        - name: flags
          value: '--'
        - name: argocd-version
          value: v2.2.2
      runAfter:
        - git-commit-build
      taskRef:
        kind: ClusterTask
        name: argocd-task-sync-and-wait
    - name: build
      params:
        - name: SCRIPT
          value: oc start-build bc/java-sample --from-dir=. --follow
        - name: VERSION
          value: latest
      runAfter:
        - argocd-sync-build
      taskRef:
        kind: ClusterTask
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: workspace
    - name: kube-lint-chart
      runAfter:
        - build
      taskRef:
        kind: Task
        name: kube-linter
      params:
        - name: config_file_url
          value: ''
        - name: config_file_path
          value: './kube-linter.yaml'
        - name: manifest
          value: ./openshift-helm/
        - name: includelist
          value: ''
        - name: excludelist
          value: ''
        - name: default_option
          value: ''
        - name: output_format
          value: json
        - name: args
          value: []
      workspaces:
        - name: source
          workspace: workspace
    - name: image-scan
      params:
        - name: rox_central_endpoint
          value: roxsecrets
        - name: rox_api_token
          value: roxsecrets
        - name: image
          value: 'ghcr.io/rutvik-nvs/java-sample:latest'
        - name: output_format
          value: json
        - name: insecure-skip-tls-verify
          value: 'true'
      runAfter:
        - kube-lint-chart
      taskRef:
        kind: Task
        name: stackrox-image-scan
    - name: image-check
      params:
        - name: rox_central_endpoint
          value: roxsecrets
        - name: rox_api_token
          value: roxsecrets
        - name: image
          value: 'ghcr.io/rutvik-nvs/java-sample:latest'
        - name: insecure-skip-tls-verify
          value: 'true'
      runAfter:
        - image-scan
      taskRef:
        kind: Task
        name: stackrox-image-check
      when:
        - input: $(params.skip_image_check)
          operator: notin
          values:
            - 'true'
    - name: update-deploy-manifest
      runAfter:
        - image-check
      taskRef:
        kind: Task
        name: yq
      params:
        - name: SCRIPT
          value: yq e -i '.deploy_version = "$(tasks.generate-build-id.results.build-id)"' ./openshift-helm/values.yaml
        - name: image
          value: >-
            docker.io/mikefarah/yq:4.27.5@sha256:2be3626ed633fbe1fc33ee9343a1256a6be53334412b2251b9a859f8c145bb53
        - name: files
          value: []
        - name: expression
          value: ''
      workspaces:
        - name: source
          workspace: workspace
    - name: git-commit-deploy
      params:
        - name: BASE_IMAGE
          value: >-
            cgr.dev/chainguard/git:root-2.39@sha256:7759f87050dd8bacabe61354d75ccd7f864d6b6f8ec42697db7159eccd491139
        - name: GIT_USER_NAME
          value: Tekton
        - name: GIT_USER_EMAIL
          value: tekton.demo@nvsconsulting.io
        - name: GIT_SCRIPT
          value: |-
            git config --global --add safe.directory /workspace/source && \
            git pull origin master && \
            git checkout master && \
            git add --all && \
            git commit -m "Bump deploy version to $(tasks.generate-build-id.results.build-id)" && \
            git push -u origin master
        - name: USER_HOME
          value: /root
        - name: VERBOSE
          value: 'true'
      runAfter:
        - update-deploy-manifest
      taskRef:
        kind: ClusterTask
        name: git-cli
      workspaces:
        - name: source
          workspace: workspace
    - name: argocd-sync-deploy
      params:
        - name: application-name
          value: java-sample
        - name: revision
          value: HEAD
        - name: flags
          value: '--'
        - name: argocd-version
          value: v2.2.2
      runAfter:
        - git-commit-deploy
      taskRef:
        kind: ClusterTask
        name: argocd-task-sync-and-wait
  workspaces:
    - name: workspace